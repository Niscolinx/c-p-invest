{"version":3,"sources":["main/Button.js","main/Input.js","util/validators.js","main/auth/Auth.js","main/auth/Signup.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","button","props","link","a","createElement","className","concat","design","mode","join","to","children","onClick","disabled","loading","type","input","formLink","Fragment","label","htmlFor","id","control","valid","touched","minLength","required","value","placeholder","onChange","e","target","files","onBlur","rows","checked","d","__webpack_exports__","length","email","trim","config","isValid","min","max","test","Auth","messageCheck","message","Object","keys","values","messageToDisplay","messageStyle","display","authMessage","error","pop","push","success","login","style","connect","state","err","auth","order","redirectToLoginPage","redirect","tokenId","userId","dispatch","onInitSignup","orderAction","_useState","useState","signupForm","fullname","validators","username","confirmEmail","password","confirmPassword","secretQuestion","secretAnswer","bitcoinAccount","ethereumAccount","formValid","_useState2","_home_niscolinx_Desktop_main_dev_projects_coin_perfect_investment_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","setState","_useState3","_useState4","setChecked","_useState5","_useState6","setMessage","useEffect","console","log","page","inputChangeHandler","prevState","_step","_iterator","_createForOfIteratorHelper","s","done","validator","emailValue","passwordValue","f","updatedForm","_home_niscolinx_Desktop_main_dev_projects_coin_perfect_investment_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","_home_niscolinx_Desktop_main_dev_projects_coin_perfect_investment_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","formIsValid","inputName","inputBlurHandler","history","replace","react__WEBPACK_IMPORTED_MODULE_3___default","_Auth__WEBPACK_IMPORTED_MODULE_9__","onSubmit","preventDefault","_Input__WEBPACK_IMPORTED_MODULE_6__","bind","isChecked","_Button__WEBPACK_IMPORTED_MODULE_7__"],"mappings":"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","file":"static/js/4.e83b446f.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst button = (props) =>\r\n    !props.link ? (\r\n        <button\r\n            className={[\r\n                'button',\r\n                `button--${props.design}`,\r\n                `button--${props.mode}`,\r\n            ].join(' ')}\r\n            onClick={props.onClick}\r\n            disabled={props.disabled || props.loading}\r\n            type={props.type}\r\n        >\r\n            {props.loading ? 'Loading...' : props.children}\r\n        </button>\r\n    ) : (\r\n        <Link\r\n            className={[\r\n                'button',\r\n                `button--${props.design}`,\r\n                `button--${props.mode}`,\r\n            ].join(' ')}\r\n            to={props.link}\r\n        >\r\n            {props.children}\r\n        </Link>\r\n    )\r\n\r\nexport default button\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst input = (props) => {\r\n\r\n    const formLink = (\r\n        <>\r\n            <p className='form__linkText'>\r\n                I agree with the{' '}\r\n                <Link to='/' className='form__link'>\r\n                    Terms and Conditions\r\n                </Link>\r\n            </p>\r\n        </>\r\n    )\r\n\r\n    return (\r\n        <>\r\n            <div className='form'>\r\n                {props.label && (\r\n                    <label className='form__label' htmlFor={props.id}>\r\n                        {props.label !== 'checkbox' ? props.label : null}\r\n                    </label>\r\n                )}\r\n                {props.control === 'input' && (\r\n                    <input\r\n                        className={[\r\n                            'form__input',\r\n                            !props.valid && props.touched ? 'invalid' : 'valid',\r\n                          \r\n                        ].join(' ')}\r\n                        minLength={props.minLength}\r\n                        type={props.type}\r\n                        id={props.id}\r\n                        required={props.required}\r\n                        value={props.value}\r\n                        placeholder={props.placeholder}\r\n                        onChange={(e) =>\r\n                            props.onChange(\r\n                                props.id,\r\n                                e.target.value,\r\n                                e.target.files\r\n                            )\r\n                        }\r\n                        onBlur={props.onBlur}\r\n                    />\r\n                )}\r\n                {props.control === 'textarea' && (\r\n                    <textarea\r\n                        className={[\r\n                            'form__textarea',\r\n                            !props.valid ? 'invalid' : 'valid',\r\n                            props.touched ? 'touched' : 'untouched',\r\n                        ].join(' ')}\r\n                        id={props.id}\r\n                        rows={props.rows}\r\n                        required={props.required}\r\n                        value={props.value}\r\n                        onChange={(e) =>\r\n                            props.onChange(props.id, e.target.value)\r\n                        }\r\n                        onBlur={props.onBlur}\r\n                    />\r\n                )}\r\n            \r\n                {props.label && props.control === 'checkbox' && (\r\n                    <label className='form__checkboxLabel' htmlFor={props.id}>\r\n                        <input\r\n                            className={'form__checkbox'}\r\n                            id={props.id}\r\n                            type={props.type}\r\n                            onChange={(e) => {\r\n                                props.onChange(props.id, e.target.checked)\r\n                            }}\r\n                        />\r\n                        {props.label === 'checkbox' ? formLink : null}\r\n                    </label>\r\n                )}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default input\r\n","export const required = (value) => value.trim() !== ''\n\nexport const length = (config) => (value) => {\n    let isValid = true\n    if (config.min) {\n        isValid = isValid && value.trim().length >= config.min\n    }\n    if (config.max) {\n        isValid = isValid && value.trim().length <= config.max\n    }\n    return isValid\n}\n\nexport const email = (value) =>\n    /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/.test(\n        value\n    )\n","import React from 'react'\n\nconst Auth = (props) => {\n    let messageCheck = false\n\n    if (props.message) {\n        if (\n            Object.keys(props.message)[0] === 'error' ||\n            Object.keys(props.message)[0] === 'success'\n        ) {\n            if (Object.values(props.message)[0] !== null) {\n                messageCheck = true\n            }\n        } else {\n            messageCheck = false\n        }\n    }\n\n    let messageToDisplay = messageCheck ? Object.values(props.message) : null\n\n    const messageStyle = {\n        display: messageToDisplay ? 'block' : 'none',\n    }\n\n    const authMessage = ['auth__message']\n\n    if (messageToDisplay && props.message.error) {\n        authMessage.length > 1\n            ? authMessage.pop() && authMessage.push('auth__message--error')\n            : authMessage.push('auth__message--error')\n    }\n\n    if (messageToDisplay && props.message.success) {\n        authMessage.length > 1\n            ? authMessage.pop() && authMessage.push('auth__message--success')\n            : authMessage.push('auth__message--success')\n    }\n\n    return (\n        <section\n            className={props.login ? 'auth-form auth-form__login' : 'auth-form'}\n        >\n            <p className={authMessage.join(' ')} style={messageStyle}>\n                {messageToDisplay}\n            </p>\n            {props.children}\n        </section>\n    )\n}\n\nexport default Auth\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport * as orderAction from '../../store/actions/burgerIndex'\nimport Input from '../Input'\nimport Button from '../Button'\nimport { required, length, email } from '../../util/validators'\nimport Auth from './Auth'\n\nconst Signup = (props) => {\n    const [state, setState] = useState({\n        signupForm: {\n            fullname: {\n                value: '',\n                valid: false,\n                touched: false,\n                validators: [required, length({ min: 6 })],\n            },\n            username: {\n                value: '',\n                valid: false,\n                touched: false,\n                validators: [required, length({ min: 3 })],\n            },\n            email: {\n                value: '',\n                valid: false,\n                touched: false,\n                validators: [required, email],\n            },\n            confirmEmail: {\n                value: '',\n                valid: false,\n                touched: false,\n                validators: [required, email],\n            },\n            password: {\n                value: '',\n                valid: false,\n                touched: false,\n                validators: [required, length({ min: 6 })],\n            },\n            confirmPassword: {\n                value: '',\n                valid: false,\n                touched: false,\n                validators: [required, length({ min: 6 })],\n            },\n            secretQuestion: {\n                value: '',\n                valid: false,\n                touched: false,\n                validators: [required, length({ min: 6 })],\n            },\n            secretAnswer: {\n                value: '',\n                valid: false,\n                touched: false,\n                validators: [required, length({ min: 6 })],\n            },\n            bitcoinAccount: {\n                value: '',\n                valid: false,\n                touched: false,\n                validators: [length({ min: 26 })],\n            },\n            ethereumAccount: {\n                value: '',\n                valid: false,\n                touched: false,\n                validators: [length({ min: 40 })],\n            },\n\n            formValid: false,\n        },\n    })\n\n    const [checked, setChecked] = useState(false)\n    const [message, setMessage] = useState(null)\n\n    useEffect(() => {\n        console.log('set message',message, props.err)\n        if (props.err) {\n            setMessage({\n                error:\n                    props.err.page === 'signup'\n                        ? props.err.error[0].message\n                        : null,\n            })\n        }\n        else if(props.tokenId) {\n         setMessage({\n                success: \"Success\"\n            })\n\n    }\n    }, [props])\n\n    const inputChangeHandler = (input, value) => {\n        setState((prevState) => {\n            let isValid = true\n            for (const validator of prevState.signupForm[input].validators) {\n                const emailValue = prevState.signupForm.email.value\n                const passwordValue = prevState.signupForm.password.value\n\n                if (input === 'confirmEmail') {\n                    if (emailValue !== value) {\n                        isValid = false\n                    } else {\n                        isValid = true\n                    }\n                }\n                if (input === 'confirmPassword') {\n                    if (passwordValue !== value) {\n                        isValid = false\n                    } else {\n                        isValid = true\n                    }\n                }\n\n                isValid = isValid && validator(value)\n            }\n            const updatedForm = {\n                ...prevState.signupForm,\n                [input]: {\n                    ...prevState.signupForm[input],\n                    valid: isValid,\n                    value: value,\n                    touched: true,\n                },\n            }\n            let formIsValid = true\n            for (const inputName in updatedForm) {\n                if (\n                    inputName !== 'formValid' &&\n                    inputName !== '[object Object]' &&\n                    inputName !== 'bitcoinAccount' &&\n                    inputName !== 'ethereumAccount'\n                ) {\n                    formIsValid = formIsValid && updatedForm[inputName].valid\n                }\n            }\n            return {\n                signupForm: updatedForm,\n                formValid: formIsValid,\n            }\n        })\n    }\n\n    const inputBlurHandler = (input) => {}\n\n    const checkboxHandler = (id, isChecked) => {\n        setChecked(isChecked)\n    }\n\n    const handleSignup = (e) => {\n        e.preventDefault()\n        console.log('validation', state.formValid, checked)\n        if (state.formValid && checked) {\n            props.onInitSignup(state)\n        } else {\n            console.log('invalid form')\n            setMessage({ error: 'Wrong Input, please check your entries' })\n        }\n    }\n\n    console.log('history', props.history)\n    if (props.redirectToLoginPage) {\n        console.log('redirect is true', props.redirectToLoginPage)\n        props.history.replace(props.redirectToLoginPage)\n    }\n\n    console.log('props message', message)\n\n    return (\n        <>\n            <Auth message={message}>\n                <form onSubmit={handleSignup} className='form__box'>\n                    <div className='form-1'>\n                        <h3 className='heading-3 form__heading'>\n                            Personal Information\n                        </h3>\n                        <Input\n                            id='fullname'\n                            label='Fullname'\n                            type='text'\n                            control='input'\n                            minLength={6}\n                            onChange={inputChangeHandler}\n                            onBlur={inputBlurHandler.bind('fullname')}\n                            value={state.signupForm['fullname'].value}\n                            valid={state.signupForm['fullname'].valid}\n                            touched={state.signupForm['fullname'].touched}\n                        />\n                        <Input\n                            id='username'\n                            label='Username'\n                            type='text'\n                            control='input'\n                            minLength={3}\n                            onChange={inputChangeHandler}\n                            onBlur={inputBlurHandler.bind('username')}\n                            value={state.signupForm['username'].value}\n                            valid={state.signupForm['username'].valid}\n                            touched={state.signupForm['username'].touched}\n                        />\n\n                        <Input\n                            id='email'\n                            label='E-Mail'\n                            type='email'\n                            control='input'\n                            onChange={inputChangeHandler}\n                            onBlur={inputBlurHandler.bind('email')}\n                            value={state.signupForm['email'].value}\n                            valid={state.signupForm['email'].valid}\n                            touched={state.signupForm['email'].touched}\n                        />\n                        <Input\n                            id='confirmEmail'\n                            label='Confirm E-Mail'\n                            type='email'\n                            control='input'\n                            onChange={inputChangeHandler}\n                            onBlur={inputBlurHandler.bind('confirmEmail')}\n                            value={state.signupForm['confirmEmail'].value}\n                            valid={state.signupForm['confirmEmail'].valid}\n                            touched={state.signupForm['confirmEmail'].touched}\n                        />\n                    </div>\n                    <div className='form-2'>\n                        <h3 className='heading-3 form__heading'>\n                            Account Information\n                        </h3>\n\n                        <Input\n                            id='password'\n                            label='Password'\n                            type='password'\n                            control='input'\n                            minLength={6}\n                            onChange={inputChangeHandler}\n                            onBlur={inputBlurHandler.bind('password')}\n                            value={state.signupForm['password'].value}\n                            valid={state.signupForm['password'].valid}\n                            touched={state.signupForm['password'].touched}\n                        />\n                        <Input\n                            id='confirmPassword'\n                            label='confirm Password'\n                            type='password'\n                            control='input'\n                            minLength={6}\n                            onChange={inputChangeHandler}\n                            onBlur={inputBlurHandler.bind('confirmPassword')}\n                            value={state.signupForm['confirmPassword'].value}\n                            valid={state.signupForm['confirmPassword'].valid}\n                            touched={\n                                state.signupForm['confirmPassword'].touched\n                            }\n                        />\n                        <Input\n                            id='secretQuestion'\n                            label='Secret Question'\n                            type='text'\n                            control='input'\n                            minLength={6}\n                            onChange={inputChangeHandler}\n                            onBlur={inputBlurHandler.bind('secretQuestion')}\n                            value={state.signupForm['secretQuestion'].value}\n                            valid={state.signupForm['secretQuestion'].valid}\n                            touched={state.signupForm['secretQuestion'].touched}\n                        />\n                        <Input\n                            id='secretAnswer'\n                            label='Secret Answer'\n                            type='text'\n                            control='input'\n                            minLength={6}\n                            onChange={inputChangeHandler}\n                            onBlur={inputBlurHandler.bind('secretAnswer')}\n                            value={state.signupForm['secretAnswer'].value}\n                            valid={state.signupForm['secretAnswer'].valid}\n                            touched={state.signupForm['secretAnswer'].touched}\n                        />\n                    </div>\n                    <div className='form-3'>\n                        <h3 className='heading-3 form__heading'>\n                            Currency Information\n                        </h3>\n\n                        <Input\n                            id='bitcoinAccount'\n                            label='Bitcoin Account'\n                            type='text'\n                            control='input'\n                            minLength={26}\n                            placeholder='optional'\n                            onChange={inputChangeHandler}\n                            onBlur={inputBlurHandler.bind('bitcoinAccount')}\n                            value={state.signupForm['bitcoinAccount'].value}\n                            valid={state.signupForm['bitcoinAccount'].valid}\n                            touched={state.signupForm['bitcoinAccount'].touched}\n                        />\n                        <Input\n                            id='ethereumAccount'\n                            label='Ethereum Account'\n                            type='ethereumAccount'\n                            control='input'\n                            placeholder='optional'\n                            minLength={40}\n                            onChange={inputChangeHandler}\n                            onBlur={inputBlurHandler.bind('ethereumAccount')}\n                            value={state.signupForm['ethereumAccount'].value}\n                            valid={state.signupForm['ethereumAccount'].valid}\n                            touched={\n                                state.signupForm['ethereumAccount'].touched\n                            }\n                        />\n                    </div>\n\n                    <div className='form-btn'>\n                        <Input\n                            id='signupCheckbox'\n                            label='checkbox'\n                            type='checkbox'\n                            control='checkbox'\n                            onChange={checkboxHandler}\n                        />\n                        <Button\n                            design='raised'\n                            type='submit'\n                            loading={props.loading}\n                        >\n                            Signup\n                        </Button>\n                    </div>\n                </form>\n            </Auth>\n        </>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        err: state.auth.error,\n        loading: state.order.loading,\n        redirectToLoginPage: state.auth.redirect,\n        tokenId: state.auth.tokenId,\n        userId: state.auth.userId,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onInitSignup: (state) => dispatch(orderAction.initSignup(state)),\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup)\n"],"sourceRoot":""}